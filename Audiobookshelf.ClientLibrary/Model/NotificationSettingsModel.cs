/*
 * Audiobookshelf API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Audiobookshelf.ClientLibrary.Client.OpenAPIDateConverter;

namespace Audiobookshelf.ClientLibrary.Model
{
    /// <summary>
    /// Notification Settings
    /// </summary>
    [DataContract(Name = "NotificationSettings")]
    public partial class NotificationSettingsModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NotificationSettingsModel" /> class.
        /// </summary>
        /// <param name="id">The ID of the notification settings..</param>
        /// <param name="appriseType">The type of Apprise to use..</param>
        /// <param name="appriseApiUrl">The Apprise API URL..</param>
        /// <param name="notifications">The set notifications..</param>
        /// <param name="maxFailedAttempts">Max number of consecutive failures before disable..</param>
        /// <param name="maxNotificationQueue">Max number of notifications in queue..</param>
        /// <param name="notificationDelay">Time (ms) between notification pushes..</param>
        public NotificationSettingsModel(string id = default(string), string appriseType = default(string), string appriseApiUrl = default(string), List<NotificationModel> notifications = default(List<NotificationModel>), int maxFailedAttempts = default(int), int maxNotificationQueue = default(int), long notificationDelay = default(long))
        {
            this.Id = id;
            this.AppriseType = appriseType;
            this.AppriseApiUrl = appriseApiUrl;
            this.Notifications = notifications;
            this.MaxFailedAttempts = maxFailedAttempts;
            this.MaxNotificationQueue = maxNotificationQueue;
            this.NotificationDelay = notificationDelay;
        }

        /// <summary>
        /// The ID of the notification settings.
        /// </summary>
        /// <value>The ID of the notification settings.</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// The type of Apprise to use.
        /// </summary>
        /// <value>The type of Apprise to use.</value>
        [DataMember(Name = "appriseType", EmitDefaultValue = false)]
        public string AppriseType { get; set; }

        /// <summary>
        /// The Apprise API URL.
        /// </summary>
        /// <value>The Apprise API URL.</value>
        [DataMember(Name = "appriseApiUrl", EmitDefaultValue = true)]
        public string AppriseApiUrl { get; set; }

        /// <summary>
        /// The set notifications.
        /// </summary>
        /// <value>The set notifications.</value>
        [DataMember(Name = "notifications", EmitDefaultValue = false)]
        public List<NotificationModel> Notifications { get; set; }

        /// <summary>
        /// Max number of consecutive failures before disable.
        /// </summary>
        /// <value>Max number of consecutive failures before disable.</value>
        [DataMember(Name = "maxFailedAttempts", EmitDefaultValue = false)]
        public int MaxFailedAttempts { get; set; }

        /// <summary>
        /// Max number of notifications in queue.
        /// </summary>
        /// <value>Max number of notifications in queue.</value>
        [DataMember(Name = "maxNotificationQueue", EmitDefaultValue = false)]
        public int MaxNotificationQueue { get; set; }

        /// <summary>
        /// Time (ms) between notification pushes.
        /// </summary>
        /// <value>Time (ms) between notification pushes.</value>
        [DataMember(Name = "notificationDelay", EmitDefaultValue = false)]
        public long NotificationDelay { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class NotificationSettingsModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  AppriseType: ").Append(AppriseType).Append("\n");
            sb.Append("  AppriseApiUrl: ").Append(AppriseApiUrl).Append("\n");
            sb.Append("  Notifications: ").Append(Notifications).Append("\n");
            sb.Append("  MaxFailedAttempts: ").Append(MaxFailedAttempts).Append("\n");
            sb.Append("  MaxNotificationQueue: ").Append(MaxNotificationQueue).Append("\n");
            sb.Append("  NotificationDelay: ").Append(NotificationDelay).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
