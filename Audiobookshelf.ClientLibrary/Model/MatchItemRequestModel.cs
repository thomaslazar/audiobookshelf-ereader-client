/*
 * Audiobookshelf API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Audiobookshelf.ClientLibrary.Client.OpenAPIDateConverter;

namespace Audiobookshelf.ClientLibrary.Model
{
    /// <summary>
    /// MatchItemRequestModel
    /// </summary>
    [DataContract(Name = "MatchItemRequest")]
    public partial class MatchItemRequestModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MatchItemRequestModel" /> class.
        /// </summary>
        /// <param name="provider">provider (default to &quot;google&quot;).</param>
        /// <param name="title">title.</param>
        /// <param name="author">author.</param>
        /// <param name="overrideDefaults">overrideDefaults (default to false).</param>
        /// <param name="isbn">isbn.</param>
        /// <param name="asin">asin.</param>
        public MatchItemRequestModel(string provider = @"google", string title = default(string), string author = default(string), bool overrideDefaults = false, string isbn = default(string), string asin = default(string))
        {
            // use default value if no "provider" provided
            this.Provider = provider ?? @"google";
            this.Title = title;
            this.Author = author;
            this.OverrideDefaults = overrideDefaults;
            this.Isbn = isbn;
            this.Asin = asin;
        }

        /// <summary>
        /// Gets or Sets Provider
        /// </summary>
        [DataMember(Name = "provider", EmitDefaultValue = false)]
        public string Provider { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Author
        /// </summary>
        [DataMember(Name = "author", EmitDefaultValue = false)]
        public string Author { get; set; }

        /// <summary>
        /// Gets or Sets OverrideDefaults
        /// </summary>
        [DataMember(Name = "overrideDefaults", EmitDefaultValue = true)]
        public bool OverrideDefaults { get; set; }

        /// <summary>
        /// Gets or Sets Isbn
        /// </summary>
        [DataMember(Name = "isbn", EmitDefaultValue = false)]
        public string Isbn { get; set; }

        /// <summary>
        /// Gets or Sets Asin
        /// </summary>
        [DataMember(Name = "asin", EmitDefaultValue = false)]
        public string Asin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MatchItemRequestModel {\n");
            sb.Append("  Provider: ").Append(Provider).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Author: ").Append(Author).Append("\n");
            sb.Append("  OverrideDefaults: ").Append(OverrideDefaults).Append("\n");
            sb.Append("  Isbn: ").Append(Isbn).Append("\n");
            sb.Append("  Asin: ").Append(Asin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
