/*
 * Audiobookshelf API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Audiobookshelf.ClientLibrary.Client.OpenAPIDateConverter;

namespace Audiobookshelf.ClientLibrary.Model
{
    /// <summary>
    /// Device Info
    /// </summary>
    [DataContract(Name = "DeviceInfo")]
    public partial class DeviceInfoModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceInfoModel" /> class.
        /// </summary>
        /// <param name="id">Unique identifier. UUIDv4.</param>
        /// <param name="userId">User identifier. UUIDv4.</param>
        /// <param name="deviceId">Device identifier..</param>
        /// <param name="ipAddress">The IP address that the request came from..</param>
        /// <param name="browserName">The browser name..</param>
        /// <param name="browserVersion">The browser version..</param>
        /// <param name="osName">The OS name..</param>
        /// <param name="osVersion">The OS version..</param>
        /// <param name="deviceType">The device type..</param>
        /// <param name="manufacturer">The device manufacturer..</param>
        /// <param name="model">The device model..</param>
        /// <param name="sdkVersion">The Android SDK version if applicable..</param>
        /// <param name="clientName">Name of the client..</param>
        /// <param name="clientVersion">Version of the client..</param>
        public DeviceInfoModel(string id = default(string), string userId = default(string), string deviceId = default(string), string ipAddress = default(string), string browserName = default(string), string browserVersion = default(string), string osName = default(string), string osVersion = default(string), string deviceType = default(string), string manufacturer = default(string), string model = default(string), int? sdkVersion = default(int?), string clientName = default(string), string clientVersion = default(string))
        {
            this.Id = id;
            this.UserId = userId;
            this.DeviceId = deviceId;
            this.IpAddress = ipAddress;
            this.BrowserName = browserName;
            this.BrowserVersion = browserVersion;
            this.OsName = osName;
            this.OsVersion = osVersion;
            this.DeviceType = deviceType;
            this.Manufacturer = manufacturer;
            this.Model = model;
            this.SdkVersion = sdkVersion;
            this.ClientName = clientName;
            this.ClientVersion = clientVersion;
        }

        /// <summary>
        /// Unique identifier. UUIDv4
        /// </summary>
        /// <value>Unique identifier. UUIDv4</value>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// User identifier. UUIDv4
        /// </summary>
        /// <value>User identifier. UUIDv4</value>
        [DataMember(Name = "userId", EmitDefaultValue = false)]
        public string UserId { get; set; }

        /// <summary>
        /// Device identifier.
        /// </summary>
        /// <value>Device identifier.</value>
        [DataMember(Name = "deviceId", EmitDefaultValue = false)]
        public string DeviceId { get; set; }

        /// <summary>
        /// The IP address that the request came from.
        /// </summary>
        /// <value>The IP address that the request came from.</value>
        [DataMember(Name = "ipAddress", EmitDefaultValue = true)]
        public string IpAddress { get; set; }

        /// <summary>
        /// The browser name.
        /// </summary>
        /// <value>The browser name.</value>
        [DataMember(Name = "browserName", EmitDefaultValue = true)]
        public string BrowserName { get; set; }

        /// <summary>
        /// The browser version.
        /// </summary>
        /// <value>The browser version.</value>
        [DataMember(Name = "browserVersion", EmitDefaultValue = true)]
        public string BrowserVersion { get; set; }

        /// <summary>
        /// The OS name.
        /// </summary>
        /// <value>The OS name.</value>
        [DataMember(Name = "osName", EmitDefaultValue = true)]
        public string OsName { get; set; }

        /// <summary>
        /// The OS version.
        /// </summary>
        /// <value>The OS version.</value>
        [DataMember(Name = "osVersion", EmitDefaultValue = true)]
        public string OsVersion { get; set; }

        /// <summary>
        /// The device type.
        /// </summary>
        /// <value>The device type.</value>
        [DataMember(Name = "deviceType", EmitDefaultValue = true)]
        public string DeviceType { get; set; }

        /// <summary>
        /// The device manufacturer.
        /// </summary>
        /// <value>The device manufacturer.</value>
        [DataMember(Name = "manufacturer", EmitDefaultValue = true)]
        public string Manufacturer { get; set; }

        /// <summary>
        /// The device model.
        /// </summary>
        /// <value>The device model.</value>
        [DataMember(Name = "model", EmitDefaultValue = true)]
        public string Model { get; set; }

        /// <summary>
        /// The Android SDK version if applicable.
        /// </summary>
        /// <value>The Android SDK version if applicable.</value>
        [DataMember(Name = "sdkVersion", EmitDefaultValue = true)]
        public int? SdkVersion { get; set; }

        /// <summary>
        /// Name of the client.
        /// </summary>
        /// <value>Name of the client.</value>
        [DataMember(Name = "clientName", EmitDefaultValue = false)]
        public string ClientName { get; set; }

        /// <summary>
        /// Version of the client.
        /// </summary>
        /// <value>Version of the client.</value>
        [DataMember(Name = "clientVersion", EmitDefaultValue = false)]
        public string ClientVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeviceInfoModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("  DeviceId: ").Append(DeviceId).Append("\n");
            sb.Append("  IpAddress: ").Append(IpAddress).Append("\n");
            sb.Append("  BrowserName: ").Append(BrowserName).Append("\n");
            sb.Append("  BrowserVersion: ").Append(BrowserVersion).Append("\n");
            sb.Append("  OsName: ").Append(OsName).Append("\n");
            sb.Append("  OsVersion: ").Append(OsVersion).Append("\n");
            sb.Append("  DeviceType: ").Append(DeviceType).Append("\n");
            sb.Append("  Manufacturer: ").Append(Manufacturer).Append("\n");
            sb.Append("  Model: ").Append(Model).Append("\n");
            sb.Append("  SdkVersion: ").Append(SdkVersion).Append("\n");
            sb.Append("  ClientName: ").Append(ClientName).Append("\n");
            sb.Append("  ClientVersion: ").Append(ClientVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
