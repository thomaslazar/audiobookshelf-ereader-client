/*
 * Audiobookshelf API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Audiobookshelf.ClientLibrary.Client.OpenAPIDateConverter;

namespace Audiobookshelf.ClientLibrary.Model
{
    /// <summary>
    /// LoginResponseModel
    /// </summary>
    [DataContract(Name = "LoginResponse")]
    public partial class LoginResponseModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LoginResponseModel" /> class.
        /// </summary>
        /// <param name="user">user.</param>
        /// <param name="userDefaultLibraryId">The ID of the first library accessible by the user..</param>
        /// <param name="serverSettings">serverSettings.</param>
        /// <param name="source">The server&#39;s installation source..</param>
        public LoginResponseModel(UserModel user = default(UserModel), string userDefaultLibraryId = default(string), ServerSettingsModel serverSettings = default(ServerSettingsModel), string source = default(string))
        {
            this.User = user;
            this.UserDefaultLibraryId = userDefaultLibraryId;
            this.ServerSettings = serverSettings;
            this.Source = source;
        }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", EmitDefaultValue = false)]
        public UserModel User { get; set; }

        /// <summary>
        /// The ID of the first library accessible by the user.
        /// </summary>
        /// <value>The ID of the first library accessible by the user.</value>
        [DataMember(Name = "userDefaultLibraryId", EmitDefaultValue = false)]
        public string UserDefaultLibraryId { get; set; }

        /// <summary>
        /// Gets or Sets ServerSettings
        /// </summary>
        [DataMember(Name = "serverSettings", EmitDefaultValue = false)]
        public ServerSettingsModel ServerSettings { get; set; }

        /// <summary>
        /// The server&#39;s installation source.
        /// </summary>
        /// <value>The server&#39;s installation source.</value>
        [DataMember(Name = "Source", EmitDefaultValue = false)]
        public string Source { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LoginResponseModel {\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  UserDefaultLibraryId: ").Append(UserDefaultLibraryId).Append("\n");
            sb.Append("  ServerSettings: ").Append(ServerSettings).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
