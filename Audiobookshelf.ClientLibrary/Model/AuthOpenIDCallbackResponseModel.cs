/*
 * Audiobookshelf API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Audiobookshelf.ClientLibrary.Client.OpenAPIDateConverter;

namespace Audiobookshelf.ClientLibrary.Model
{
    /// <summary>
    /// AuthOpenIDCallbackResponseModel
    /// </summary>
    [DataContract(Name = "AuthOpenIDCallbackResponse")]
    public partial class AuthOpenIDCallbackResponseModel : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthOpenIDCallbackResponseModel" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected AuthOpenIDCallbackResponseModel() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="AuthOpenIDCallbackResponseModel" /> class.
        /// </summary>
        /// <param name="userDefaultLibraryId">userDefaultLibraryId.</param>
        /// <param name="serverSettings">serverSettings (required).</param>
        /// <param name="source">source.</param>
        /// <param name="user">user (required).</param>
        /// <param name="ereaderDevices">ereaderDevices.</param>
        public AuthOpenIDCallbackResponseModel(string userDefaultLibraryId = default(string), ServerSettingsModel serverSettings = default(ServerSettingsModel), string source = default(string), UserModel user = default(UserModel), List<Object> ereaderDevices = default(List<Object>))
        {
            // to ensure "serverSettings" is required (not null)
            if (serverSettings == null)
            {
                throw new ArgumentNullException("serverSettings is a required property for AuthOpenIDCallbackResponseModel and cannot be null");
            }
            this.ServerSettings = serverSettings;
            // to ensure "user" is required (not null)
            if (user == null)
            {
                throw new ArgumentNullException("user is a required property for AuthOpenIDCallbackResponseModel and cannot be null");
            }
            this.User = user;
            this.UserDefaultLibraryId = userDefaultLibraryId;
            this.Source = source;
            this.EreaderDevices = ereaderDevices;
        }

        /// <summary>
        /// Gets or Sets UserDefaultLibraryId
        /// </summary>
        [DataMember(Name = "userDefaultLibraryId", EmitDefaultValue = false)]
        public string UserDefaultLibraryId { get; set; }

        /// <summary>
        /// Gets or Sets ServerSettings
        /// </summary>
        [DataMember(Name = "serverSettings", IsRequired = true, EmitDefaultValue = true)]
        public ServerSettingsModel ServerSettings { get; set; }

        /// <summary>
        /// Gets or Sets Source
        /// </summary>
        [DataMember(Name = "Source", EmitDefaultValue = false)]
        public string Source { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", IsRequired = true, EmitDefaultValue = true)]
        public UserModel User { get; set; }

        /// <summary>
        /// Gets or Sets EreaderDevices
        /// </summary>
        [DataMember(Name = "ereaderDevices", EmitDefaultValue = false)]
        public List<Object> EreaderDevices { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AuthOpenIDCallbackResponseModel {\n");
            sb.Append("  UserDefaultLibraryId: ").Append(UserDefaultLibraryId).Append("\n");
            sb.Append("  ServerSettings: ").Append(ServerSettings).Append("\n");
            sb.Append("  Source: ").Append(Source).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("  EreaderDevices: ").Append(EreaderDevices).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
